//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/Meshes/scruffyInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @ScruffyInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @ScruffyInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""scruffyInput"",
    ""maps"": [
        {
            ""name"": ""GroundedInputs"",
            ""id"": ""27bc0508-fb8c-45ef-988f-86a5285b4163"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""90101108-bc46-4070-85cc-02ad3b2e5736"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""c4eb3376-60c5-4b0b-86b3-16c10b5c975b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""99f23960-5df5-4ce1-aae0-9f0b3c80ea4c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""e486812a-8403-47da-bf92-21a8237dc660"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""38c1566d-68fa-475e-b4d2-1238149bda71"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""19a3dde3-e1eb-41f8-95a6-6baa00429fad"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""77cc487b-25c0-4a51-8819-3dae9fcf3423"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d553a669-7878-4dea-ba5a-2d11407b8741"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""c803fb73-b5aa-4c23-a1d3-ce4c40b4069c"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""9a9a3677-f3e5-4a80-b5c3-16a9ecb8c28a"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Look Vector"",
                    ""id"": ""44e7005c-1a00-47bc-9b10-34baca776b5e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""67ff873b-0569-4cfb-9b5a-4ac44a1587ed"",
                    ""path"": ""<VirtualMouse>/scroll/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""1e35d4ba-8779-4ee5-b7c0-81bb970a0aab"",
                    ""path"": ""<Mouse>/scroll/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""e9f55d2a-458f-4737-9c63-e5d0fde74333"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""90dd819c-2b7d-4945-97e4-baceefc9142d"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""491d3bf2-ea76-405f-9241-d2365eccfc00"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // GroundedInputs
        m_GroundedInputs = asset.FindActionMap("GroundedInputs", throwIfNotFound: true);
        m_GroundedInputs_Move = m_GroundedInputs.FindAction("Move", throwIfNotFound: true);
        m_GroundedInputs_Run = m_GroundedInputs.FindAction("Run", throwIfNotFound: true);
        m_GroundedInputs_Look = m_GroundedInputs.FindAction("Look", throwIfNotFound: true);
        m_GroundedInputs_Jump = m_GroundedInputs.FindAction("Jump", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // GroundedInputs
    private readonly InputActionMap m_GroundedInputs;
    private List<IGroundedInputsActions> m_GroundedInputsActionsCallbackInterfaces = new List<IGroundedInputsActions>();
    private readonly InputAction m_GroundedInputs_Move;
    private readonly InputAction m_GroundedInputs_Run;
    private readonly InputAction m_GroundedInputs_Look;
    private readonly InputAction m_GroundedInputs_Jump;
    public struct GroundedInputsActions
    {
        private @ScruffyInput m_Wrapper;
        public GroundedInputsActions(@ScruffyInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_GroundedInputs_Move;
        public InputAction @Run => m_Wrapper.m_GroundedInputs_Run;
        public InputAction @Look => m_Wrapper.m_GroundedInputs_Look;
        public InputAction @Jump => m_Wrapper.m_GroundedInputs_Jump;
        public InputActionMap Get() { return m_Wrapper.m_GroundedInputs; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GroundedInputsActions set) { return set.Get(); }
        public void AddCallbacks(IGroundedInputsActions instance)
        {
            if (instance == null || m_Wrapper.m_GroundedInputsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GroundedInputsActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Run.started += instance.OnRun;
            @Run.performed += instance.OnRun;
            @Run.canceled += instance.OnRun;
            @Look.started += instance.OnLook;
            @Look.performed += instance.OnLook;
            @Look.canceled += instance.OnLook;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
        }

        private void UnregisterCallbacks(IGroundedInputsActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Run.started -= instance.OnRun;
            @Run.performed -= instance.OnRun;
            @Run.canceled -= instance.OnRun;
            @Look.started -= instance.OnLook;
            @Look.performed -= instance.OnLook;
            @Look.canceled -= instance.OnLook;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
        }

        public void RemoveCallbacks(IGroundedInputsActions instance)
        {
            if (m_Wrapper.m_GroundedInputsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGroundedInputsActions instance)
        {
            foreach (var item in m_Wrapper.m_GroundedInputsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GroundedInputsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GroundedInputsActions @GroundedInputs => new GroundedInputsActions(this);
    public interface IGroundedInputsActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
    }
}
